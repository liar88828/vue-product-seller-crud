// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String?
  phone       String?
  address     String?
  password    String
  // 
  Product     Product[]
  Transaction Transaction[]
  Order       Order[]
  MessageList MessageList[]
  Preview     Preview[]
  Market      Market?
  Like        Like?         @relation(fields: [id_like], references: [id])
  id_like     Int?          @unique
  // 
  Trolly      Trolly?       @relation(fields: [id_trolly], references: [id])
  id_trolly   Int?          @unique
  // 
  Role        Role?         @relation(fields: [id_role], references: [id])
  id_role     String?
  //
  Follow      Follow?       @relation(fields: [id_follow], references: [id])
  id_follow   Int?
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  image       String
  brand       String?
  stock       Int
  price       Int
  // 
  id_user     String?
  User        User?     @relation(fields: [id_user], references: [id])
  // 
  id_type     String?
  type        Type?     @relation(fields: [id_type], references: [id])
  // 
  Package     Package[] // will order
  Box         Box[] // only save on trolly
  Preview     Preview[] // user comment after buy
  // 
  Spec        Spec[]
  Tech        Tech[]
  Desc        Desc[]
  Img         Image[]
  // 
  Order       Order?    @relation(fields: [id_order], references: [id])
  id_order    Int?
  // 
  Market      Market?   @relation(fields: [id_market], references: [id])
  id_market   Int?
  // 
  Like        Like[]
}

model Image {
  title      String   @id
  img        String
  link       String
  Product    Product? @relation(fields: [id_product], references: [id])
  id_product Int?
}

model Desc {
  text       String   @id
  Product    Product? @relation(fields: [id_product], references: [id])
  id_product Int?
}

model Tech {
  title      String   @id
  text       String
  // List       List_Tech[]
  Product    Product? @relation(fields: [id_product], references: [id])
  id_product Int?
}

// model List_Tech {
//   id        String  @id
//   Tech      Tech?   @relation(fields: [techTitle], references: [title])
//   techTitle String?
// }

model Spec {
  title      String      @id
  List       List_Spec[]
  Product    Product?    @relation(fields: [id_product], references: [id])
  id_product Int?
}

model List_Spec {
  text      String  @id
  Spec      Spec?   @relation(fields: [specTitle], references: [title])
  specTitle String?
}

model Preview {
  id         Int      @id @default(autoincrement())
  text       String
  time       DateTime @default(now())
  // 
  id_user    String
  User       User     @relation(fields: [id_user], references: [id])
  // 
  id_product Int?
  Product    Product? @relation(fields: [id_product], references: [id])
}

model Trolly {
  id   Int   @id @default(autoincrement())
  // 
  User User?
  Box  Box[]
}

model Box {
  id         Int      @id @default(autoincrement())
  qty        Int // how many buy @map("amount") 
  price      Int // may be discount
  // save a product
  Product    Product? @relation(fields: [id_product], references: [id])
  id_product Int?
  // as label 
  Trolly     Trolly?  @relation(fields: [id_trolly], references: [id])
  id_trolly  Int?
  // 
}

model Package {
  id             Int          @id @default(autoincrement())
  qty            Int
  price          Int
  // 
  Product        Product?     @relation(fields: [id_product], references: [id])
  id_product     Int?
  // 
  Transaction    Transaction? @relation(fields: [id_transaction], references: [id])
  id_transaction Int?
  //
}

model Transaction {
  id           Int       @id @default(autoincrement())
  drop_address String?
  // who's buy 
  User         User?     @relation(fields: [id_user], references: [id])
  id_user      String?
  // 
  // that status transaction is []
  Status       Status?   @relation(fields: [id_status], references: [id])
  id_status    String?
  // 
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  // 
  Package      Package[]
}

model Status {
  id          String        @id @default("SIMPAN")
  Transaction Transaction[]
}

model Type {
  id      String    @id @default("TIDAK TAHU")
  Product Product[]
}

model Role {
  id   String @id @default("USER")
  User User[]
}

model Market {
  id             Int          @id @default(autoincrement())
  name           String
  industry       String
  address        String
  description    String
  mission        String
  vision         String
  history        String
  // 
  Additional     Additional[]
  Order          Order[]
  Product        Product[]
  since          DateTime     @default(now())
  // 
  Contact        Contact?     @relation(fields: [id_contact], references: [id])
  id_contact     Int?         @unique
  // 
  SocialMedia    SocialMedia? @relation(fields: [id_socialMedia], references: [id])
  id_socialMedia Int?         @unique
  // 
  User           User?        @relation(fields: [id_user], references: [id])
  id_user        String?      @unique
  // 
  Follow         Follow?      @relation(fields: [id_follow], references: [id])
  id_follow      Int?
}

model Follow {
  id     Int      @id @default(autoincrement())
  User   User[]
  Market Market[]
}

model Contact {
  id      Int     @id @default(autoincrement())
  email   String
  phone   String
  website String
  Market  Market?
}

model SocialMedia {
  id        Int     @id @default(autoincrement())
  instagram String
  facebook  String
  twitter   String
  whatsapp  String
  Market    Market?
}

model Additional {
  id        String  @id
  Market    Market? @relation(fields: [id_market], references: [id])
  id_market Int?
}

model Order {
  id         Int       @id @default(autoincrement())
  discount   Int
  status     String
  promoCode  String
  dateBuy    DateTime
  expired    DateTime
  Product    Product[]
  // trolly    Product[]
  // 
  id_userBuy String
  userBuy    User      @relation(fields: [id_userBuy], references: [id])
  // 
  id_market  Int
  Market     Market    @relation(fields: [id_market], references: [id])
}

// ------------- Message
model MessageContact {
  id          Int           @id @default(autoincrement())
  name        String
  time        DateTime
  img         String
  MessageList MessageList[]
  read        Boolean
}

model MessageList {
  id                Int             @id @default(autoincrement())
  User              User?           @relation(fields: [id_user], references: [id])
  id_user           String?
  time              DateTime
  msg               String
  MessageContact    MessageContact? @relation(fields: [id_messageContact], references: [id])
  id_messageContact Int?
}

model Like {
  id         Int      @id @default(autoincrement())
  id_user    String
  User       User?
  Product    Product? @relation(fields: [id_product], references: [id])
  id_product Int
}
